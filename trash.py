import telebot
import datetime
import time
import random  # –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö —Ç–µ–∫—Å—Ç—ñ–≤
import sqlite3 as sq
from config import Bot_token_searchyoutube  # –ò–º–ø–æ—Ä—Ç API –∫–ª—é—á–µ–π –∏–∑ config.py

bot = telebot.TeleBot(Bot_token_searchyoutube)

markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
New_chanel = telebot.types.KeyboardButton('–ù–æ–≤–∞ –ø—ñ–¥–±—ñ—Ä–∫–∞ –∫–∞–Ω–∞–ª—ñ–≤')
Ref_chanel = telebot.types.KeyboardButton('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞')
markup.add(New_chanel, Ref_chanel)

# –°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
channel_messages = [
    '''
–ü—Ä–∏–≤–µ—Ç!
–Ø –∑–∞–º–µ—Ç–∏–ª —Ç–≤–æ–π YouTube-–∫–∞–Ω–∞–ª "{channel_name}", –∏ –æ–Ω, –∫–∞–∂–µ—Ç—Å—è, –¥–∞–≤–Ω–æ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –æ–±—Å—É–¥–∏—Ç—å.
–Ø –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –µ–≥–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è. –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–±—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –Ω–∞–ø–∏—à–∏!
''',
    '''
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!
–Ø –Ω–∞—à–µ–ª –≤–∞—à YouTube-–∫–∞–Ω–∞–ª "{channel_name}", –∏ –º–Ω–µ –ø–æ–∫–∞–∑–∞–ª–æ—Å—å, —á—Ç–æ –æ–Ω —É–∂–µ –¥–∞–≤–Ω–æ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω. –ï—Å—Ç—å –∏–¥–µ—è, –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –≤–æ–∑—Ä–æ–¥–∏—Ç—å.
–ï—Å–ª–∏ —ç—Ç–æ –¥–ª—è –≤–∞—Å –∞–∫—Ç—É–∞–ª—å–Ω–æ, —è –≥–æ—Ç–æ–≤ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!
''',
    '''
–ü—Ä–∏–≤–µ—Ç!
–¢–≤–æ–π –∫–∞–Ω–∞–ª "{channel_name}" –ø—Ä–∏–≤–ª–µ–∫ –º–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —Ö–æ—Ç—è –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–Ω –¥–∞–≤–Ω–æ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è. –£ –º–µ–Ω—è –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ.
–ï—Å–ª–∏ —Ç–µ–±–µ —ç—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Å–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π, –∏ –æ–±—Å—É–¥–∏–º!
''',
    '''
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!
–í–∞—à –∫–∞–Ω–∞–ª "{channel_name}" –¥–∞–≤–Ω–æ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è. –Ø –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –≤ –µ–≥–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–∏.
–ï—Å–ª–∏ –≥–æ—Ç–æ–≤—ã –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–≥–æ–¥–Ω–æ –¥–ª—è –Ω–∞—Å –æ–±–æ–∏—Ö!
''',
    '''
–ü—Ä–∏–≤–µ—Ç!
–ù–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ —Ç–≤–æ–π –∫–∞–Ω–∞–ª "{channel_name}". –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –æ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–∫–æ—è.
–£ –º–µ–Ω—è –µ—Å—Ç—å –∏–¥–µ—è –ø–æ –µ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –∏ –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ö–æ—Ä–æ—à—É—é —Ü–µ–Ω—É. –ù–∞–ø–∏—à–∏, –µ—Å–ª–∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω!
'''
]

# –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å—Ç–∞—Ä—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
def skip_old_updates():
    updates = bot.get_updates(timeout=1)
    if updates:
        # –ë–µ—Ä–µ–º–æ ID –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        return updates[-1].update_id + 1
    return None

# –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π update_id
last_update_id = skip_old_updates()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–±–æ—Ä—É –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
def get_random_channel_message(channel_name):
    return random.choice(channel_messages).format(channel_name=channel_name)


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
with sq.connect("Chanelsyoutube_base.db") as con:
    cur = con.cursor()
    cur.execute("""
        CREATE TABLE IF NOT EXISTS users(
            id INTEGER PRIMARY KEY,
            username TEXT,
            num_newchanel INTEGER DEFAULT 0,
            num_buy INTEGER DEFAULT 0,
            last_channel_index INTEGER DEFAULT 0  -- –ù–æ–≤–µ –ø–æ–ª–µ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—É
        )
    """)



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
def add_user_to_db(user_id, username, mes):
    with sq.connect("Chanelsyoutube_base.db") as con:
        cur = con.cursor()
        cur.execute("SELECT id FROM users WHERE id = ?", (user_id,))
        if cur.fetchone() is None:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ
            cur.execute("INSERT INTO users (id, username) VALUES (?, ?)", (user_id, username))
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {user_id} —Å username {username}")
            bot.send_message(mes, '–ü—Ä–∏–≤—ñ—Ç üåùü§ö.', reply_markup=markup)
        else:
            bot.send_message(mes, '–ú–∏ –∑ —Ç–æ–±–æ—é –≤–∂–µ –∑–Ω–∞–π–æ–º—ñ!', reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def is_user_registered(user_id):
    with sq.connect("Chanelsyoutube_base.db") as con:
        cur = con.cursor()
        cur.execute("SELECT id FROM users WHERE id = ?", (user_id,))
        return cur.fetchone() is not None  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

@bot.message_handler(commands=['start'])
def Start(message):
    add_user_to_db(message.from_user.id, message.from_user.username, message.chat.id)  # –ó–∞–ø–∏—Å—É—î–º–æ username
    bot.send_message(message.from_user.id, "–£–¥–∞—á–Ω–∏—Ö –ø–æ—à—É–∫—ñ–≤ —Å–∏—â–∏–∫)", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def main(message):
    time.sleep(1)  # –ó–∞—Ç—Ä–∏–º–∫–∞ –≤ 1 —Å–µ–∫—É–Ω–¥—É

    if not is_user_registered(message.from_user.id):
        bot.send_message(message.chat.id, "–í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ! –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.")
        return

    with sq.connect("Chanelsyoutube_base.db") as con:
        cur = con.cursor()
        # –û—Ç—Ä–∏–º—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è num_buy –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        cur.execute("SELECT num_buy FROM users WHERE id = ?", (message.from_user.id,))
        num_buy = cur.fetchone()[0]

    if num_buy == 0:
        if message.text == '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞':
            bot.send_message(message.chat.id, '''
–ù–µ –∑–∞–±—É–≤–∞–π –ø—Ä–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É —Å–∏—Å—Ç–µ–º—É –±–æ—Ç–∞: –∑–∞ –∫–æ–∂–Ω—É –ª—é–¥–∏–Ω—É, —è–∫—É —Ç–∏ –ø—Ä–∏–≤–µ–¥–µ—à —ñ —è–∫–∞ –∫—É–ø–∏—Ç—å –Ω–∞—à –±–æ—Ç, 
—Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à 25% –≤—ñ–¥ —Ü—ñ–Ω–∏, –∞–ª–µ —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏–¥–±–∞–≤ –¥–æ—Ä–æ–∂—á–µ, –≤–∞—à –±–æ–Ω—É—Å ‚Äî 30%.
–¢–æ–∂ —è–∫—â–æ –Ω–µ –≤–∏–π–¥–µ –∑ YouTube-–∫–∞–Ω–∞–ª–∞–º–∏, —É —Ç–µ–±–µ —î —à–∞–Ω—Å –∑–∞—Ä–æ–±–∏—Ç–∏ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –∑ –Ω–∞–º–∏ —Ç–∞ –Ω–∞—à–æ—é –∫–æ–º–∞–Ω–¥–æ—é!
–ó–∞ –¥–µ—Ç–∞–ª—è–º–∏ –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å: @cashplag
                ''', reply_markup=markup)
            return
        elif message.text == '–ù–æ–≤–∞ –ø—ñ–¥–±—ñ—Ä–∫–∞ –∫–∞–Ω–∞–ª—ñ–≤':
            bot.send_message(
                message.chat.id,
                "–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞–Ω–∞–ª—ñ–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø—Ä–∏–¥–±–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏. –ü—Ä–∏–¥–±–∞—Ç–∏ –º–æ–∂–Ω–∞ —É @cashplag",
                reply_markup=markup
            )
        else:
            bot.send_message(message.chat.id, f'–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤ = {message.text}', reply_markup=markup)
        return  # –ë–ª–æ–∫—É—î–º–æ –ø–æ–¥–∞–ª—å—à—ñ –¥—ñ—ó

    # –Ø–∫—â–æ num_buy = 1, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if message.text == '–ù–æ–≤–∞ –ø—ñ–¥–±—ñ—Ä–∫–∞ –∫–∞–Ω–∞–ª—ñ–≤':
        bot.send_message(message.chat.id, '–©–∞—Å—Ç–∏!', reply_markup=markup)
        print(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—Ç—Ä–∏–º—É—î –∫–∞–Ω–∞–ª: {message.from_user.id} –∑ username {message.from_user.username}")
        process_channels(message)  # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –æ–±—Ä–æ–±–∫–∏ –∫–∞–Ω–∞–ª—ñ–≤
    elif message.text == '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞':
        bot.send_message(message.chat.id, '''
–ù–µ –∑–∞–±—É–≤–∞–π –ø—Ä–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É —Å–∏—Å—Ç–µ–º—É –±–æ—Ç–∞: –∑–∞ –∫–æ–∂–Ω—É –ª—é–¥–∏–Ω—É, —è–∫—É —Ç–∏ –ø—Ä–∏–≤–µ–¥–µ—à —ñ —è–∫–∞ –∫—É–ø–∏—Ç—å –Ω–∞—à –±–æ—Ç, 
—Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à 25% –≤—ñ–¥ —Ü—ñ–Ω–∏, –∞–ª–µ —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏–¥–±–∞–≤ –¥–æ—Ä–æ–∂—á–µ, –≤–∞—à –±–æ–Ω—É—Å ‚Äî 30%.
–¢–æ–∂ —è–∫—â–æ –Ω–µ –≤–∏–π–¥–µ –∑ YouTube-–∫–∞–Ω–∞–ª–∞–º–∏, —É —Ç–µ–±–µ —î —à–∞–Ω—Å –∑–∞—Ä–æ–±–∏—Ç–∏ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –∑ –Ω–∞–º–∏ —Ç–∞ –Ω–∞—à–æ—é –∫–æ–º–∞–Ω–¥–æ—é!
–ó–∞ –¥–µ—Ç–∞–ª—è–º–∏ –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å: @cashplag
        ''', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, f'–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤ = {message.text}', reply_markup=markup)


channels_file = 'inactive_channels.txt'
processed_channels_file = 'processed_channels.txt'  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤


def process_channels(message):
    with sq.connect("Chanelsyoutube_base.db") as con:
        cur = con.cursor()

        # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        cur.execute("SELECT num_newchanel FROM users WHERE id = ?", (message.from_user.id,))
        user_data = cur.fetchone()
        if not user_data:
            bot.send_message(message.chat.id, "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            return

        num_newchanel = user_data[0]

        # –ß–∏—Ç–∞—î–º–æ –≤—Å—ñ –∫–∞–Ω–∞–ª–∏ –∑ —Ñ–∞–π–ª—É
        channels = get_all_channels()

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —â–µ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–∞–Ω–∞–ª–∏
        if not channels:
            bot.send_message(message.chat.id, "–ù–∞ –∂–∞–ª—å, –∫–∞–Ω–∞–ª–∏ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
            return

        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–µ—Ä—à–∏–π –∫–∞–Ω–∞–ª
        channel_line = channels[0]
        channel_parts = channel_line.split(',')
        if len(channel_parts) < 2:  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É
            bot.send_message(message.chat.id, "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –∑ –¥–∞–Ω–∏–º–∏ –∫–∞–Ω–∞–ª—É. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return

        channel_id = channel_parts[0].strip()
        channel_name = channel_parts[1].strip()
        youtube_link = f'https://www.youtube.com/channel/{channel_id}'

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∫–∞–Ω–∞–ª –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        bot.send_message(
            message.chat.id,
            f"–ö–∞–Ω–∞–ª: {channel_name}\n–ü–æ—Å–∏–ª–∞–Ω–Ω—è: {youtube_link}"
        )
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —Ç–µ–∫—Å—Ç–æ–º
        bot.send_message(message.chat.id, get_random_channel_message(channel_name))

        # –í–∏–¥–∞–ª—è—î–º–æ –∫–∞–Ω–∞–ª –∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª—É —Ç–∞ –¥–æ–¥–∞—î–º–æ –≤ –æ–±—Ä–æ–±–ª–µ–Ω—ñ
        update_channel_files(channel_line)

        # –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–¥–∞–Ω–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —É –±–∞–∑—ñ
        cur.execute("""
            UPDATE users
            SET num_newchanel = num_newchanel + 1
            WHERE id = ?
        """, (message.from_user.id,))
        con.commit()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏–∑ —Ñ–∞–π–ª–∞
def get_all_channels():
    try:
        with open(channels_file, 'r', encoding='utf-8') as file:
            return [line.strip() for line in file.readlines() if line.strip()]  # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ —Ä—è–¥–∫–∏
    except FileNotFoundError:
        print("–§–∞–π–ª –∑ –∫–∞–Ω–∞–ª–∞–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return []
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É: {e}")
        return []



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∫–∞–Ω–∞–ª–æ–≤
def update_channel_files(channel_line):
    global channels_file, processed_channels_file
    try:
        # –í–∏–¥–∞–ª—è—î–º–æ —Ä—è–¥–æ–∫ –∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª—É
        with open(channels_file, 'r', encoding='utf-8') as file:
            lines = file.readlines()

        with open(channels_file, 'w', encoding='utf-8') as file:
            for line in lines:
                if line.strip() != channel_line.strip():
                    file.write(line)

        # –î–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –¥–æ —Ñ–∞–π–ª—É –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤
        with open(processed_channels_file, 'a', encoding='utf-8') as processed_file:
            processed_file.write(channel_line + '\n')

    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤: {e}")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
res = True
while res:
    try:
        bot.polling(skip_pending=True, none_stop=True)
        res = False
    except Exception as e:
        print(f'bot_stop: {e}', datetime.datetime.now())
        res = True

